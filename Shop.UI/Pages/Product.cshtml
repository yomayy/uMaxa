@page "{name}"
@model Shop.UI.Pages.ProductModel
@{
}

<div class="hero">
	<div class="hero-body">
		<div class="container">
			<div class="columns">
				<div class="column is-6">
					<figure class="image">
						<img src="~/images/item1.jpg" />
					</figure>
				</div>
				<div class="column is-6">
					<section class="content">
						<p class="title">@Model.Product?.Name</p>
						<p class="subtitle">@Model.Product?.Description</p>
						<p>
							At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.
						</p>
						<footer>
							<form method="post">
								@{
									bool outOfStock = true;
								}
								<div class="field is-horizontal">
									<div class="field-label is-normal">
										<label class="label">Size</label>
									</div>
									<div class="field-body">
										<div class="field is-narrow">
											<div class="control">
												<div class="select is-fullwidth">
													<select asp-for="CartViewModel.StockId" onchange="toggleStock(event)">
														@foreach (var s in Model.Product.Stocks) {

															bool disabled = s.Quantity <= 0;
															outOfStock = disabled;
															<option value="@s.Id" disabled="@disabled">@s.Description</option>
														}
													</select>
												</div>
											</div>
										</div>
									</div>
								</div>

								<div class="field is-horizontal">
									<div class="field-label is-normal">
										<label class="label">Quantity</label>
									</div>
									<div class="field-body">
										<div class="field is-narrow">
											<div class="control">
												<input class="input" asp-for="CartViewModel.Quantity" value="1" min="1"/>
											</div>
											@foreach (var stock in Model?.Product?.Stocks) {
												if(stock.Quantity <= 10) {
													<p class="help is-danger is-hidden low-stock" id="low-stock-@stock.Id">
														@(stock.Quantity == 0 ? "Out Stock" : $"{stock.Quantity} Left")
													</p>
												}
											}
										</div>
									</div>
								</div>

								<div class="field is-horizontal">
									<div class="field-label is-normal">
									</div>
									<div class="field-body">
										<div class="field is-narrow">
											<div class="control">
												<button class="button is-success" type="submit" disabled="@outOfStock">Submit</button>
											</div>
										</div>
									</div>
								</div>

							</form>
						</footer>
					</section>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	var toggleStock = function (e) {
		console.log(e);

		var stockToHide = document.querySelectorAll('.low-stock');

		stockToHide?.forEach(function (e) {
			e.classList.add('is-hidden');
		})

		showLowStock(e.target.value);
	}

	var showLowStock = function (id) {
		var stockToShow = document.getElementById('low-stock-' + id);

		if (stockToShow !== null && stockToShow !== undefined) {
			stockToShow.classList.remove('is-hidden');
		}
	}

	showLowStock(document.getElementById('CartViewModel_StockId').value);
</script>
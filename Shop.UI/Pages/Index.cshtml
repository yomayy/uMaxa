@page "{handler?}"
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}
<script src='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.0-2/js/all.min.js'></script>

<div class="section" id="app">
	<form class="is-expanded" method="get"
		  asp-page-handler="SearchProduct">
		<div class="field is-grouped">
			<p class="control is-expanded">
				<input class="input" type="text" name="searchString"
					   id="searchString" placeholder="Find product" />
			</p>
			<p class="control">
				<input class="button is-info" type="submit" value="Search" />
			</p>
		</div>
	</form>
	<br />

	<div class="columns">
		<div class="column is-2">
			<div class="dropdown">
				<div class="dropdown-trigger">
					<button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
						<span>All categories</span>
						<span class="icon is-small">
							<i class="fas fa-angle-down" aria-hidden="true"></i>
						</span>
					</button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu" role="menu" style="width: inherit">
					<div class="dropdown-content">
						<a asp-page="Index" class="dropdown-item">
							All
						</a>
						<hr class="dropdown-divider">
						@{
							foreach (var category in Model.IndexViewModel.Categories) {
								@if (category.Id.ToString() == Model.selectedCategoryId) {
									<a class="dropdown-item is-active" asp-page="Index" asp-page-handler="ByCategoryId" asp-route-categoryId="@category.Id">@category.Name</a>
								}
								else {
									<a class="dropdown-item" asp-page="Index" asp-page-handler="ByCategoryId" asp-route-categoryId="@category.Id">@category.Name</a>
								}
							}
						}
					</div>
				</div>
			</div>
		</div>
		
		<div class="column is-10">

			@if (!string.IsNullOrEmpty(Model.SearchString)
			   && Model.IndexViewModel.Products.Count() > 0) {
				<p class="subtitle">result for <strong>"@Model.SearchString"</strong> :</p>
			}
			else if (Model.IndexViewModel.Products.Count() == 0) {
				<p class="subtitle">no results were found for <strong>"@Model.SearchString"</strong></p>
			}
			<div class="columns is-multiline is-mobile">
				@{
					foreach (var p in Model.IndexViewModel.Products) {
						<div class="column is-3-desktop is-4-tablet is-6-mobile">
							<a asp-page="Product" asp-route-name="@p.Name.Replace(" ", "-")">
								<div class="card">
									<div class="card-image">
										<figure class="image is-4by3">
											<img src="@p.Image" />
										</figure>
									</div>
									<div class="card-content">
										<p class="title is-size-5 has-text-centered">
											@p.Name - @p.Value
										</p>
										<p class="subtitle has-text-centered">
											@p.Description
										</p>

										@{
											string cssClass = string.Empty;
											string message = string.Empty;
											if (p.StockCount == 0) {
												cssClass = "is-danger";
												message = "Out of Stock";
											}
											else if (p.StockCount <= 10) {
												cssClass = "is-warning";
												message = "Low on Stock";
											}
										}
										@if (p.StockCount <= 10) {
											<div class="notification is-paddingless has-text-centered @cssClass">
												@message
											</div>
										}

									</div>
								</div>
							</a>
						</div>
					}
				}
			</div>
		</div>
	</div>
</div>

<div style="margin-bottom: 10px">
	<div class="has-text-centered">
		@if (Model.PageViewModel.HasPreviousPage) {
			if (string.IsNullOrEmpty(Model.selectedCategoryId)) {
				<a asp-page="Index"
				   asp-route-pageNumber="@(Model.PageViewModel.PageNumber - 1)"
				   class="button">
					Back
				</a>
			}
			else {
				<a asp-page="Index"
				   asp-page-handler="ByCategoryId"
				   asp-route-categoryId="@Model.selectedCategoryId"
				   asp-route-pageNumber="@(Model.PageViewModel.PageNumber - 1)"
				   class="button">
					Back
				</a>
			}
		}
		<a class="button is-active are-medium is-primary">
			@Model.PageViewModel.PageNumber
		</a>
		@if (Model.PageViewModel.HasNextPage) {
			if (string.IsNullOrEmpty(Model.selectedCategoryId)) {
				<a asp-page="Index"
				   asp-route-pageNumber="@(Model.PageViewModel.PageNumber + 1)"
				   class="button">
					Next
				</a>
			}
			else {
				<a asp-page="Index"
				   asp-page-handler="ByCategoryId"
				   asp-route-categoryId="@Model.selectedCategoryId"
				   asp-route-pageNumber="@(Model.PageViewModel.PageNumber + 1)"
				   class="button">
					Next
				</a>
			}
		}
	</div>
</div>

@section scripts{
	<script src="~/js/product/product.js"></script>
	<script>
		var dropdown = document.querySelector('.dropdown');
		dropdown.addEventListener('click', function (event) {
			event.stopPropagation();
			dropdown.classList.toggle('is-active');
		});
	</script>
}